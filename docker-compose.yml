volumes:
  redis_data:
  pihole_log:
services:
  redis:
    container_name: redis
    image: docker.io/library/redis:alpine
    command: redis-server --save 30 1 --loglevel warning
    restart: unless-stopped
    volumes:
      - redis_data:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
  haproxy:
    container_name: haproxy
    image: haproxy:latest
    restart: unless-stopped
    ports:
        - "8404:8404"
        - "9050:9050"
    volumes:
        - ./haproxy:/usr/local/etc/haproxy
    depends_on: [tor]
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8314:80/tcp"
    depends_on: [tor]
    environment:
      TZ: 'America/Chicago'
      WEBPASSWORD: ''
    # Volumes store your data between container upgrades
    volumes:
      - './pihole/pihole:/etc/pihole'
      - './pihole/dnsmasq.d:/etc/dnsmasq.d'
      - 'pihole_log:/var/log'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    # cap_add:
    #  - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
  searxng:
    container_name: searxng
    restart: unless-stopped
    image: searxng_local # docker.io/searxng/searxng:latest
    build:
      context: .
      dockerfile: ./Dockerfile.searxng
    volumes:
      - ./searxng:/etc/searxng
    ports:
      - 8080:8080
    depends_on: [redis, morty, tor]
    environment:
      - SEARXNG_BASE_URL=http://${SEARXNG_HOSTNAME:-searxng}:8080/
    #  - SEARXNG_DEBUG=1
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
  morty:
    container_name: morty
    image: ghcr.io/karmishin/morty:master
    restart: unless-stopped
    command:
      - "-listen=0.0.0.0:3000"
      - "-socks5=socks5://haproxy:9050"
      - "-timeout=10"
    depends_on:
      - haproxy
    ports:
      - "3000:3000"
  tor:
    image: tor_local
    build:
      context: .
      dockerfile: ./Dockerfile.tor
    restart: unless-stopped
    volumes: [./tor:/etc/tor]
    deploy:
      mode: replicated
      replicas: 9
